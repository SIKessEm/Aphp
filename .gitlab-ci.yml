image: php:8.0-apache

stages:
  - sys
  - app

before_script:
  - apt-get update -yqq
  - apt-get upgrade -yqq
  - apt-get install -yqq git vim

after_script:
  - vim --version
  - git --version

variables:
  POSTGRES_DB: aphp
  POSTGRES_USER: SIKessEm
  POSTGRES_PASSWORD: Aphp-1.0|DevOps
  POSTGRES_HOST_AUTH_METHOD: trust

site:
  stage: sys
  cache:
    paths:
      - pkg/
  script:
    - apt-get install -yqq libpq-dev libcurl4-gnutls-dev libicu-dev libvpx-dev libjpeg-dev libpng-dev libxpm-dev zlib1g-dev libfreetype6-dev libxml2-dev libexpat1-dev libbz2-dev libgmp3-dev libldap2-dev unixodbc-dev libsqlite3-dev libaspell-dev libsnmp-dev libpcre3-dev libtidy-dev libonig-dev libzip-dev
    - docker-php-ext-install mbstring pdo_pgsql curl intl gd xml zip bz2 opcache
    - curl -sS https://getcomposer.org/installer | php
    - php composer.phar install
  services:
    - postgres:13.4

base:
  stage: sys
  image: postgres:13.4
  script:
    - export PGPASSWORD=$POSTGRES_PASSWORD
    - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT 'OK' AS status;"

test:
  stage: app
  script:
    - php cli/fetch
    - php cli/serve
